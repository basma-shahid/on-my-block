{"version":3,"sources":["users.js"],"names":["user","require","jwt","SALT_ROUNDS","create","res","hashedPassword","_user","token","regeneratorRuntime","async","_context","prev","next","awrap","bcrypt","req","body","password","sent","User","username","email","sign","process","env","SECRET","expiresIn","json","t0","status","stop","login","_user2","_context2","Error","module"],"mappings":"aAAA,IAAMA,KAAOC,QAAQ,kBACfC,IAAMD,QAAQ,gBADdD,OAAOC,QAAQ,UAKfE,YAAc,EASpB,SAAAC,OAA2BC,EAA3BA,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAJ,mBAAAK,MAEqCC,OAAOC,EAAIC,KAAKC,SAAUf,cAF/D,KAAA,EAAA,OAEcG,EAFdK,EAAAQ,KAAAR,EAAAE,KAAA,EAAAJ,mBAAAK,MAAAM,KAAAhB,OAAA,CAAAiB,SAAAL,EAAAC,KAAAI,SAAAC,MAAAN,EAAAC,KAAAK,MAAAJ,SAAAZ,KAAA,KAAA,EAAAN,EAAAW,EAAAQ,KAAAX,EAAAN,IAAAqB,KAAA,CAAAvB,KAAAA,GAAAwB,QAAAC,IAAAC,OAAA,CAAAC,UAAA,QAAAtB,EAAAuB,KAAApB,GAAAG,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAkB,GAAAlB,EAAA,MAAA,GAAAN,EAAAyB,OAAA,KAAAF,KAAAjB,EAAAkB,IAAA,KAAA,GAAA,IAAA,MAAA,OAAAlB,EAAAoB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,SAAAC,MAAAhB,EAAAX,GAAA,IAAA4B,EAAAzB,EAAA,OAAAC,mBAAAC,MAAA,SAAAwB,GAAA,OAAA,OAAAA,EAAAtB,KAAAsB,EAAArB,MAAA,KAAA,EAAA,OAAAqB,EAAAtB,KAAA,EAAAsB,EAAArB,KAAA,EAAAJ,mBAAAK,MAGsDG,KAAKI,QAApB,CAAAC,MAAAN,EAAAC,KAAAK,SAHvC,KAAA,EAAA,OAGwCD,EAHxCa,EAAAf,KAAAe,EAAArB,KAAA,EAAAJ,mBAAAK,MAG4EE,OAAIC,QAAzCD,EAAAC,KAAAC,SAAAlB,EAAAkB,WAHvC,KAAA,EAAA,GAAAgB,EAAAf,KAAA,CAAAe,EAAArB,KAAA,EAAA,MAAA,MAGuC,IAAAsB,MAHvC,KAAA,EAAA3B,EAAAN,IAAAqB,KAAA,CAAAvB,KAAAA,GAAAwB,QAAAC,IAAAC,OAAA,CAAAC,UAAA,QAmBQtB,EAAIuB,KAAKpB,GAnBjB0B,EAAArB,KAAA,GAAA,MAAA,KAAA,GAAAqB,EAAAtB,KAAA,GAAAsB,EAAAL,GAAAK,EAAA,MAAA,GAKc1B,EAAAA,OAAQN,KAAIqB,KAAK,qBAL/B,KAAA,GAAA,IAAA,MAAA,OAAAW,EAAAH,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MATAK,OAAMjC,QAAW,CAGjBiC,OAAAA,OACIhC,MAAAA","file":"users.min.js","sourcesContent":["const user = require('../models/user');\r\nconst jwt = require('jsonwebtoken');\r\nconst bcrypt = require('bcrypt');\r\n\r\n\r\nconst SALT_ROUNDS = 6;\r\n\r\n\r\nmodule.exports ={\r\n    create,\r\n    login\r\n};\r\n\r\n\r\nasync function create(req, res){\r\n    try {\r\n        const hashedPassword = await bcrypt(req.body.password, SALT_ROUNDS)\r\n        const user = await User.create({username: req.body.username, email: req.body.email, password: hashedPassword});\r\n\r\n        const token = jwt.sign({user}, process.env.SECRET,{expiresIn:'72h'});\r\n        res.json(token);\r\n    } catch (err) {\r\n        res.status(500).json(err);\r\n    }\r\n}\r\n\r\n\r\nasync function login(req, res) {\r\n    try {\r\n        const user = await User.findOne({email: req.body.email});\r\n        if(!(await bcrypt.compare(req.body.password, user.password))) throw new Error();\r\n\r\n        const token = jwt.sign({user}, process.env.SECRET,{expiresIn:'72h'});\r\n        res.json(token);\r\n\r\n    } catch{\r\n        res.status(500).json('Wrong Credentials');\r\n    }\r\n}"]}