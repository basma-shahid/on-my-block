{"version":3,"sources":["events.js"],"names":["Event","require","User","getAll","create","req","res","name","location","body","lat","lng","time","user","_id","event","console","log","err","events","save","status","json","push","find","_context2","t0","params","populate","exec","_context3","module","exports","eventForUsers"],"mappings":"aAAA,IAAMA,MAAQC,QAAQ,mBAChBC,KAAOD,QAAQ,kBAKjBE,SAAAA,OAAAA,EAAAA,GAAAA,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAMwBH,MAAMI,OAAO,CAF1BA,KAAOC,EAAKC,KAA3BC,KAAAC,SAAAH,EAAAI,KAAAD,SAAAE,IAAAL,EAAAI,KAAAC,IAAAC,IAAAN,EAAAI,KAAAE,IAAAC,KAAAP,EAAAI,KAAAG,KAAAC,KAAAR,EAAAQ,KAAAC,OAJIX,KAAAA,EAMUY,EANVZ,EAAAA,KAIJa,QAAAC,IAAAF,GAGYR,QAAIU,IAAEZ,uBADuBA,EAAAQ,MAE7BL,QAAAA,IAAQ,aAAWA,EAAAA,KAFUM,KAI7BH,KAAAA,SAASF,EAAKE,KAJeG,IAAA,SAAAI,EAAAL,GAK7BD,EAAIO,OAAMV,KAAKG,GACfC,EAAIO,OARhBJ,QAAAC,IAAA,mBAAAf,KAAAiB,UAAAb,EAAAe,OAAA,KAAAC,KAAA,0BAJInB,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,GAAAA,EAAAA,KAAAA,GAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAeIa,EAAAA,KAAAA,EAAAA,IAfJb,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,MAoBQU,SAAAA,OAAKM,EAAOI,GAAZV,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAEYb,MAAAwB,KAAA,KAFZX,KAAAA,EAEAG,EAFAH,EAAAA,KAIJP,EAAAA,OAAIe,KAAJC,KAAgBA,GAJZT,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAhBZP,EAAAgB,KAAAG,EAAAC,IAgBYb,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,KAMJP,SAAIgB,cAAJjB,EAAAC,GAAAA,IAAAA,EAAAA,OAAAA,mBAAAA,MAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,mBAAAA,MAtBRN,MAAAwB,KAAA,CAAAX,KAAAR,EAAAsB,OAAAb,MAAAc,SAAA,QAAAC,QAsBQvB,KAAAA,EAtBRS,EAsBQT,EAAAA,KAtBRU,QAAAC,IAAAF,GAAAT,EAAAe,OAAA,KAAAC,KAAAP,GAsBQT,EAAAA,KAAAA,GAAAA,MAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,GAAAA,EAAAA,MAAAA,GAwBAU,QAAQC,IAARa,EAAAJ,IAxBApB,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,SAAAA,KAAAA,KAAAA,CAAAA,CAAAA,EAAAA,KA7BRyB,OAAOC,QAAU,CAFX9B,OAAAA,OAIF+B,cAAAA,cACA9B,OAAAA","file":"events.min.js","sourcesContent":["const Event = require('../models/event')\r\nconst User = require('../models/user')\r\n//creat getAll to get all events\r\nmodule.exports = {\r\n    create,\r\n    eventForUsers,\r\n    getAll\r\n}\r\n\r\n//function receives the events from the browser and puts it in the db\r\nasync function create(req, res) {\r\n    try {\r\n        const event = await Event.create({\r\n            name: req.body.name,\r\n            location: req.body.location,\r\n            lat: req.body.lat,\r\n            lng: req.body.lng,\r\n            time: req.body.time,\r\n            user: req.user._id,\r\n\r\n        });\r\n        console.log(event)\r\n        console.log(\"this is the req.user\", req.user)\r\n        console.log(\"this is id\", req.user._id)\r\n\r\n        User.findById(req.user._id, function (err, user) {\r\n            user.events.push(event);\r\n            user.save();\r\n            console.log(\"this is req.user\", User.events)\r\n        })\r\n        res.status(200).json('ok. event added to DB!')\r\n    } catch (err) {\r\n        res.json(err);\r\n    }\r\n}\r\n\r\nasync function getAll(req, res) {\r\n    try {\r\n        let events = await Event.find({})\r\n\r\n        res.status(200).json(events)\r\n    } catch (err) {\r\n        res.json(err);\r\n    }\r\n}\r\n\r\n\r\nasync function eventForUsers(req,res){\r\n    try{\r\n        const event =await Event.find({user:req.params._id})\r\n        .populate('user')\r\n        .exec();\r\n        console.log(event)\r\n        res.status(200).json(event);\r\n \r\n    } catch(err){\r\n        console.log(err);\r\n    }\r\n }\r\n "]}