{"version":3,"sources":["users.js"],"names":["user","require","jwt","bcrypt","SALT_ROUNDS","module","exports","create","login","req","res","body","password","hashedPassword","User","username","email","token","sign","process","env","SECRET","expiresIn","json","status","findOne","compare","Error"],"mappings":";;AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,gBAAD,CAApB;;AACA,IAAMC,GAAG,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AAGA,IAAMG,WAAW,GAAG,CAApB;AAGAC,MAAM,CAACC,OAAP,GAAgB;AACZC,EAAAA,MAAM,EAANA,MADY;AAEZC,EAAAA,KAAK,EAALA;AAFY,CAAhB;;AAMA,SAAeD,MAAf,CAAsBE,GAAtB,EAA2BC,GAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAEqCP,MAAM,CAACM,GAAG,CAACE,IAAJ,CAASC,QAAV,EAAoBR,WAApB,CAF3C;;AAAA;AAEcS,UAAAA,cAFd;AAAA;AAAA,0CAG2BC,IAAI,CAACP,MAAL,CAAY;AAACQ,YAAAA,QAAQ,EAAEN,GAAG,CAACE,IAAJ,CAASI,QAApB;AAA8BC,YAAAA,KAAK,EAAEP,GAAG,CAACE,IAAJ,CAASK,KAA9C;AAAqDJ,YAAAA,QAAQ,EAAEC;AAA/D,WAAZ,CAH3B;;AAAA;AAGcb,UAAAA,KAHd;AAKciB,UAAAA,KALd,GAKsBf,GAAG,CAACgB,IAAJ,CAAS;AAAClB,YAAAA,IAAI,EAAJA;AAAD,WAAT,EAAiBmB,OAAO,CAACC,GAAR,CAAYC,MAA7B,EAAoC;AAACC,YAAAA,SAAS,EAAC;AAAX,WAApC,CALtB;AAMQZ,UAAAA,GAAG,CAACa,IAAJ,CAASN,KAAT;AANR;AAAA;;AAAA;AAAA;AAAA;AAQQP,UAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBD,IAAhB;;AARR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaA,SAAef,KAAf,CAAqBC,GAArB,EAA0BC,GAA1B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAE2BI,IAAI,CAACW,OAAL,CAAa;AAACT,YAAAA,KAAK,EAAEP,GAAG,CAACE,IAAJ,CAASK;AAAjB,WAAb,CAF3B;;AAAA;AAEchB,UAAAA,MAFd;AAAA;AAAA,0CAGmBG,MAAM,CAACuB,OAAP,CAAejB,GAAG,CAACE,IAAJ,CAASC,QAAxB,EAAkCZ,MAAI,CAACY,QAAvC,CAHnB;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,gBAG4E,IAAIe,KAAJ,EAH5E;;AAAA;AAKcV,UAAAA,KALd,GAKsBf,GAAG,CAACgB,IAAJ,CAAS;AAAClB,YAAAA,IAAI,EAAJA;AAAD,WAAT,EAAiBmB,OAAO,CAACC,GAAR,CAAYC,MAA7B,EAAoC;AAACC,YAAAA,SAAS,EAAC;AAAX,WAApC,CALtB;AAMQZ,UAAAA,GAAG,CAACa,IAAJ,CAASN,KAAT;AANR;AAAA;;AAAA;AAAA;AAAA;AASQP,UAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBD,IAAhB,CAAqB,mBAArB;;AATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const user = require('../models/user');\r\nconst jwt = require('jsonwebtoken');\r\nconst bcrypt = require('bcrypt');\r\n\r\n\r\nconst SALT_ROUNDS = 6;\r\n\r\n\r\nmodule.exports ={\r\n    create,\r\n    login\r\n};\r\n\r\n\r\nasync function create(req, res){\r\n    try {\r\n        const hashedPassword = await bcrypt(req.body.password, SALT_ROUNDS)\r\n        const user = await User.create({username: req.body.username, email: req.body.email, password: hashedPassword});\r\n\r\n        const token = jwt.sign({user}, process.env.SECRET,{expiresIn:'72h'});\r\n        res.json(token);\r\n    } catch (err) {\r\n        res.status(500).json(err);\r\n    }\r\n}\r\n\r\n\r\nasync function login(req, res) {\r\n    try {\r\n        const user = await User.findOne({email: req.body.email});\r\n        if(!(await bcrypt.compare(req.body.password, user.password))) throw new Error();\r\n\r\n        const token = jwt.sign({user}, process.env.SECRET,{expiresIn:'72h'});\r\n        res.json(token);\r\n\r\n    } catch{\r\n        res.status(500).json('Wrong Credentials');\r\n    }\r\n}"],"file":"users.dev.js"}